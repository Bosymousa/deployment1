# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IOrVUWQGxMX6lcFM3bM11WgkzwDWwUMX
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install streamlit
# %pip install pandas
# %pip install seaborn
# %pip install matplotlib
# %pip install sklearn

import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import joblib
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA

# عنوان التطبيق
st.title("Wholesale Customers KMeans Clustering App")

# تحميل الموديل المدرب
try:
    model = joblib.load("KMeans_model.pkl")
    st.success("✅ تم تحميل الموديل بنجاح")
except:
    st.error("⚠️ ملف KMeans_model.pkl مش موجود في نفس المجلد مع app.py")

# رفع البيانات
uploaded_file = st.file_uploader("📂 ارفع ملف CSV (مثلاً Wholesale customers data.csv)", type=["csv"])

if uploaded_file is not None:
    # قراءة البيانات
    df = pd.read_csv(uploaded_file)
    st.write("### البيانات الأصلية:")
    st.dataframe(df.head())

    # الأعمدة المطلوبة للتدريب
    features = ['Milk','Grocery','Frozen','Delicassen','Detergents_Paper']

    # التحقق من وجود الأعمدة المطلوبة
    missing_cols = [col for col in features if col not in df.columns]
    if missing_cols:
        st.error(f"الأعمدة الناقصة: {missing_cols}")
    else:
        X = df[features].values

        # Scaling
        scaler = StandardScaler()
        X_scaled = scaler.fit_transform(X)

        # التنبؤ بالكلستر باستخدام الموديل المحفوظ
        y_kmeans = model.predict(X_scaled)
        df['cluster'] = y_kmeans

        # PCA لعرض البيانات في 2D
        pca = PCA(n_components=2)
        pca_df = pca.fit_transform(X_scaled)
        pca_df = pd.DataFrame(pca_df, columns=['PC1', 'PC2'])
        pca_df['cluster'] = y_kmeans

        st.write("### Visualization (PCA 2D)")
        fig, ax = plt.subplots(figsize=(8,6))
        sns.scatterplot(data=pca_df, x="PC1", y="PC2", hue="cluster", palette="Set2", ax=ax)
        st.pyplot(fig)

        # عرض متوسط القيم لكل Cluster
        st.write("### متوسط القيم في كل Cluster")
        st.dataframe(df.groupby('cluster')[features].mean())

